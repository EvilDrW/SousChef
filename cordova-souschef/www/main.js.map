{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ingredient.service.ts","webpack:///./src/app/ingredient.ts","webpack:///./src/app/ingredient/ingredient.component.css","webpack:///./src/app/ingredient/ingredient.component.html","webpack:///./src/app/ingredient/ingredient.component.ts","webpack:///./src/app/recipe-collection/recipe-collection.component.css","webpack:///./src/app/recipe-collection/recipe-collection.component.html","webpack:///./src/app/recipe-collection/recipe-collection.component.ts","webpack:///./src/app/recipe.service.ts","webpack:///./src/app/recipe/recipe.component.css","webpack:///./src/app/recipe/recipe.component.html","webpack:///./src/app/recipe/recipe.component.ts","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.css","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.html","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.ts","webpack:///./src/app/timer/timer.component.css","webpack:///./src/app/timer/timer.component.html","webpack:///./src/app/timer/timer.component.ts","webpack:///./src/app/unit.service.ts","webpack:///./src/app/unit/unit.component.css","webpack:///./src/app/unit/unit.component.html","webpack:///./src/app/unit/unit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding-top: 15px\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <app-select-recipe-modal></app-select-recipe-modal>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <div class=\\\"row\\\">\\n        <app-recipe-collection></app-recipe-collection>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'souschef';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RecipeComponent } from './recipe/recipe.component';\nimport { SelectRecipeModalComponent } from './select-recipe-modal/select-recipe-modal.component';\nimport { RecipeCollectionComponent } from './recipe-collection/recipe-collection.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { UnitComponent } from './unit/unit.component';\nimport { TimerComponent } from './timer/timer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeComponent,\n    SelectRecipeModalComponent,\n    RecipeCollectionComponent,\n    IngredientComponent,\n    UnitComponent,\n    TimerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Ingredient } from './ingredient';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n\n  constructor(private http: HttpClient) { }\n\n  private loadIngredientDatabase(): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>('./assets/ingredients.json');\n  }\n\n  getIngredient(id: string): Observable<Ingredient> {\n    return this.loadIngredientDatabase().pipe(\n      map((data) => {\n        let outputData: Ingredient[] = data.filter((r) => {\n          return r.id == id;\n        });\n\n        if (outputData.length == 1) {\n          return outputData[0];\n        }\n\n        return null;\n      })\n    );\n  }\n}\n","export class RecipeIngredient {\r\n  id: string;\r\n  unit: string;\r\n  quantity: number;\r\n  notes: string;\r\n}\r\n\r\nexport class Ingredient {\r\n\tid: string;\r\n\tname: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<span>{{ data.quantity }} <app-unit [dataId]=\\\"data.unit\\\"></app-unit>&nbsp;<span *ngIf=\\\"ingredient\\\">{{ ingredient.name }}</span><span *ngIf=\\\"data.notes\\\">, {{ data.notes }}</span></span><br />\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeIngredient, Ingredient } from '../ingredient';\nimport { IngredientService } from '../ingredient.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.css']\n})\nexport class IngredientComponent implements OnInit {\n  @Input() data: RecipeIngredient;\n  ingredient: Ingredient;\n\n  constructor(private api: IngredientService) { }\n\n  ngOnInit() {\n    this.api.getIngredient(this.data.id).subscribe((i) => this.ingredient = i);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-12\\\">\\r\\n  <app-recipe *ngFor=\\\"let id of api.openRecipes\\\" [dataId]=\\\"id\\\"></app-recipe>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-collection',\n  templateUrl: './recipe-collection.component.html',\n  styleUrls: ['./recipe-collection.component.css']\n})\nexport class RecipeCollectionComponent implements OnInit {\n\n  constructor(public api: RecipeService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Recipe, RecipeSummary } from './recipe';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// eventually we'll use the indexed db crap here, but for now we'll just use the local data\nexport class RecipeService {\n  openRecipes: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  private loadRecipeDatabase(): Observable<Recipe[]> {\n    return this.http.get<Recipe[]>('./assets/recipes.json');\n  }\n\n  getRecipe(id: string): Observable<Recipe> {\n    return this.loadRecipeDatabase().pipe(map((data) => {\n      let outputData: Recipe[] = data.filter((r) => {\n        return r.id == id;\n      });\n\n      if ((outputData.length == 0) || (outputData.length > 1)) {\n        return null;\n      }\n\n      return outputData[0];\n    }));\n  }\n\n  getRecipeNames(): Observable<RecipeSummary[]> {\n    return this.loadRecipeDatabase().pipe(map((data) => {\n      return data.map((r) => {\n        return {\n          title: r.title,\n          id: r.id\n        };\n      });\n    }));\n  }\n\n  loadRecipe(id: string) {\n    this.loadRecipeDatabase().subscribe((data) => {\n      let selection: Recipe[] = data.filter((r) => r.id == id);\n\n      if (selection.length == 1) {\n        this.openRecipes.push(selection[0].id);\n      }\n    });\n  }\n\n  unloadRecipe(id: string) {\n    this.openRecipes = this.openRecipes.filter((r) => id != r);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card mb-4\\\" *ngIf=\\\"recipe\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"card-title\\\"><h4>{{ recipe.title }}\\n        <button class=\\\"btn btn-danger float-right\\\" (click)=\\\"close()\\\"><span>&times;</span></button>\\n      </h4>\\n    </div>\\n    <div class=\\\"card-subtitle text-muted\\\">\\n      From {{ recipe.source.name }} ({{ recipe.source.year }}-{{ recipe.source.month }})<br />\\n      Serves {{ recipe.servings.min }} to {{ recipe.servings.max }}\\n    </div>\\n\\n    <br/>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\" *ngFor=\\\"let i of recipe.ingredients\\\">\\n        <app-ingredient [data]=\\\"i\\\"></app-ingredient>\\n      </div>\\n    </div>\\n\\n    <br/>\\n\\n    <ngb-tabset [justify]=\\\"'justified'\\\">\\n      <ngb-tab *ngIf=\\\"recipe.notes\\\" title=\\\"Notes\\\">\\n        <ng-template ngbTabContent>{{ recipe.notes }}</ng-template>\\n      </ngb-tab>\\n      <ngb-tab *ngFor=\\\"let step of recipe.steps; let i = index\\\" title=\\\"{{ i + 1 }}\\\">\\n        <ng-template ngbTabContent>\\n          <p>{{ step }}</p>\\n          <div *ngIf=\\\"timers[i] != 0\\\">\\n            <app-timer [time]=\\\"timers[i]\\\"></app-timer>\\n          </div>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../recipe';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.css']\n})\n\nexport class RecipeComponent implements OnInit {\n  @Input() dataId: string;\n  recipe: Recipe;\n  timers: number[];\n  stepTimer: number;\n\n  constructor(private api: RecipeService) { }\n\n  ngOnInit() {\n    this.api.getRecipe(this.dataId).subscribe((recipe) => {\n      this.recipe = recipe;\n\n      this.timers = this.recipe.steps.map((stepText: string) => {\n        var matches = /([0-9]+) (hour|minute|second)/.exec(stepText);\n        if (matches) {\n          switch (matches[2]) {\n            case 'hour':\n              return parseInt(matches[1]) * 3600;\n            case 'minute':\n              return parseInt(matches[1]) * 60;\n            case 'second':\n              return parseInt(matches[1]);\n          }\n        }\n        return 0;\n      });\n    });\n  }\n\n  close() {\n    this.api.unloadRecipe(this.recipe.id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-template #recipeSelectContent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Choose Recipes</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span>&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <button *ngFor=\\\"let recipe of recipes\\\" class=\\\"btn btn-light btn-block\\\" (click)=\\\"select(recipe.id)\\\">{{ recipe.title }}</button>\\n  </div>\\n</ng-template>\\n\\n<button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(recipeSelectContent)\\\">Open Recipes</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { RecipeService } from '../recipe.service';\nimport { RecipeSummary } from '../recipe';\n\n@Component({\n  selector: 'app-select-recipe-modal',\n  templateUrl: './select-recipe-modal.component.html',\n  styleUrls: ['./select-recipe-modal.component.css']\n})\nexport class SelectRecipeModalComponent implements OnInit {\n  recipes: RecipeSummary[];\n\n  constructor(private api: RecipeService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.api.getRecipeNames().subscribe((data) => {\n      this.recipes = data.sort((a,b) => {\n        if (a.title < b.title) {\n          return -1;\n        }\n        else {\n          return 1;\n        }\n      })\n    });\n  }\n\n  open(content) {\n    this.modalService.open(content).result.then((something) => {\n\n    });\n  }\n\n  select(id: string) {\n    this.api.loadRecipe(id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <ngb-progressbar type=\\\"info\\\" [value]=\\\"timeElapsed\\\" [max]=\\\"time\\\" [striped]=\\\"true\\\" [animated]=\\\"true\\\">{{ time - timeElapsed }}</ngb-progressbar>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <button class=\\\"btn btn-info\\\" (click)=\\\"start()\\\">Start {{ time }} second timer!</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { timer } from 'rxjs/index';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  // both in seconds\n  @Input() time: number;\n  timeElapsed: number;\n  _timer: Subscription;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  start() {\n    this._timer = timer(0, 1000).subscribe((t) => {\n      this.timeElapsed = t;\n      if (this.timeElapsed >= this.time) {\n        this._timer.unsubscribe();\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Unit } from './unit';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitService {\n\n  constructor(private http: HttpClient) { }\n\n  private loadUnitDatabase(): Observable<Unit[]> {\n    return this.http.get<Unit[]>('./assets/units.json');\n  }\n\n  getUnit(id: string): Observable<Unit> {\n    return this.loadUnitDatabase().pipe(\n      map((data) => {\n        let outputData: Unit[] = data.filter((r) => {\n          return r.id == id;\n        });\n\n        if (outputData.length == 1) {\n          return outputData[0];\n        }\n\n        return null;\n      })\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<span *ngIf=\\\"unit\\\">{{ unit.name }}</span>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Unit } from '../unit';\nimport { UnitService } from '../unit.service';\n\n@Component({\n  selector: 'app-unit',\n  templateUrl: './unit.component.html',\n  styleUrls: ['./unit.component.css']\n})\nexport class UnitComponent implements OnInit {\n  @Input() dataId: string;\n  unit: Unit;\n\n  constructor(private api: UnitService) { }\n\n  ngOnInit() {\n    this.api.getUnit(this.dataId).subscribe((u) => this.unit = u);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}