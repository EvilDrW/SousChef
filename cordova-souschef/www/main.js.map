{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/elapsed-time.pipe.ts","webpack:///./src/app/ingredient-select/ingredient-select.component.css","webpack:///./src/app/ingredient-select/ingredient-select.component.html","webpack:///./src/app/ingredient-select/ingredient-select.component.ts","webpack:///./src/app/ingredient.service.ts","webpack:///./src/app/ingredient.ts","webpack:///./src/app/ingredient/ingredient.component.css","webpack:///./src/app/ingredient/ingredient.component.html","webpack:///./src/app/ingredient/ingredient.component.ts","webpack:///./src/app/recipe-collection/recipe-collection.component.css","webpack:///./src/app/recipe-collection/recipe-collection.component.html","webpack:///./src/app/recipe-collection/recipe-collection.component.ts","webpack:///./src/app/recipe-maker/recipe-maker.component.css","webpack:///./src/app/recipe-maker/recipe-maker.component.html","webpack:///./src/app/recipe-maker/recipe-maker.component.ts","webpack:///./src/app/recipe.service.ts","webpack:///./src/app/recipe.ts","webpack:///./src/app/recipe/recipe.component.css","webpack:///./src/app/recipe/recipe.component.html","webpack:///./src/app/recipe/recipe.component.ts","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.css","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.html","webpack:///./src/app/select-recipe-modal/select-recipe-modal.component.ts","webpack:///./src/app/timer-collection/timer-collection.component.css","webpack:///./src/app/timer-collection/timer-collection.component.html","webpack:///./src/app/timer-collection/timer-collection.component.ts","webpack:///./src/app/timer.service.ts","webpack:///./src/app/timer.ts","webpack:///./src/app/timer/timer.component.css","webpack:///./src/app/timer/timer.component.html","webpack:///./src/app/timer/timer.component.ts","webpack:///./src/app/unit.service.ts","webpack:///./src/app/unit/unit.component.css","webpack:///./src/app/unit/unit.component.html","webpack:///./src/app/unit/unit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding-top: 15px\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <app-select-recipe-modal></app-select-recipe-modal>\\n      <app-recipe-maker></app-recipe-maker>\\n      <app-timer-collection></app-timer-collection>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <div class=\\\"row\\\">\\n        <app-recipe-collection></app-recipe-collection>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'souschef';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RecipeComponent } from './recipe/recipe.component';\nimport { SelectRecipeModalComponent } from './select-recipe-modal/select-recipe-modal.component';\nimport { RecipeCollectionComponent } from './recipe-collection/recipe-collection.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { UnitComponent } from './unit/unit.component';\nimport { TimerComponent } from './timer/timer.component';\nimport { RecipeMakerComponent } from './recipe-maker/recipe-maker.component';\nimport { IngredientSelectComponent } from './ingredient-select/ingredient-select.component';\nimport { ElapsedTimePipe } from './elapsed-time.pipe';\nimport { TimerCollectionComponent } from './timer-collection/timer-collection.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeComponent,\n    SelectRecipeModalComponent,\n    RecipeCollectionComponent,\n    IngredientComponent,\n    UnitComponent,\n    TimerComponent,\n    RecipeMakerComponent,\n    IngredientSelectComponent,\n    ElapsedTimePipe,\n    TimerCollectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'elapsedTime'\n})\nexport class ElapsedTimePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    var seconds: number = value as number;\n\n    var temp: number = seconds % 3600;\n    var hours: number = (seconds - temp) / 3600;\n    seconds = temp;\n\n    temp = seconds % 60;\n    var minutes: number = (seconds - temp) / 60\n    seconds = temp;\n\n    var output: string = '';\n    var printing: boolean = false;\n\n    if (hours > 0) {\n      output += hours;\n      printing = true;\n    }\n\n    if (printing) {\n      output += ':' + minutes.toPrecision(2);\n    }\n    else if (minutes > 0) {\n      output += minutes;\n      printing = true;\n    }\n\n    if (printing) {\n      output += ':';\n    }\n    output += seconds.toPrecision(2);\n\n    return output;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<input\\n  type=\\\"text\\\"\\n  [ngbTypeahead]=\\\"getIngredients\\\"\\n  [inputFormatter]=\\\"getName\\\"\\n  [resultFormatter]=\\\"getName\\\"\\n  (selectItem)=\\\"select($event)\\\"\\n  class=\\\"form-control\\\">\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, combineLatest } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\nimport { RecipeIngredient, Ingredient } from '../ingredient';\nimport { IngredientService } from '../ingredient.service';\n\n@Component({\n  selector: 'app-ingredient-select',\n  templateUrl: './ingredient-select.component.html',\n  styleUrls: ['./ingredient-select.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => IngredientSelectComponent),\n    multi: true\n  }]\n})\n\nexport class IngredientSelectComponent implements OnInit, ControlValueAccessor {\n  private innerValue: string;\n  private onChangeCallback: (_: any) => void = () => {};\n  private onTouchedCallback: () => void = () => {};\n\n  constructor(private api: IngredientService) { }\n\n  ngOnInit() {\n  }\n\n  getIngredients = (text: Observable<string>) => {\n    const textAndPantry = combineLatest(\n      this.api.getPantry(),\n      text.pipe(\n        debounceTime(200),\n        distinctUntilChanged()\n      )\n    );\n\n    return textAndPantry.pipe(map(([pantry, text]) => {\n      if (text.length < 3 || !pantry) {\n        return [];\n      }\n\n      const x = new RegExp(text, 'i');\n\n      return pantry.filter((i) => {\n        return x.test(i.name);\n      });\n    }));\n  };\n\n  getName = (i: Ingredient) => i ? i.name : '';\n\n  get value(): any {\n    return this.innerValue;\n  };\n\n  setValue(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(this.innerValue);\n    }\n  };\n\n  select = (event) => {\n    this.setValue(event.item.id);\n  };\n\n  writeValue(obj: any): void {\n    this.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Ingredient } from './ingredient';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n\n  constructor(private http: HttpClient) { }\n\n  private loadIngredientDatabase(): Observable<Ingredient[]> {\n    return this.http.get<Ingredient[]>('./assets/ingredients.json');\n  }\n\n  getIngredient(id: string): Observable<Ingredient> {\n    return this.loadIngredientDatabase().pipe(\n      map((data) => {\n        let outputData: Ingredient[] = data.filter((r) => {\n          return r.id == id;\n        });\n\n        if (outputData.length == 1) {\n          return outputData[0];\n        }\n\n        return null;\n      })\n    );\n  }\n\n  getPantry(): Observable<Ingredient[]> {\n    return this.loadIngredientDatabase();\n  }\n}\n","export class RecipeIngredient {\r\n  id: string;\r\n  unit: string;\r\n  quantity: number;\r\n  notes: string;\r\n}\r\n\r\nexport class Ingredient {\r\n\tid: string;\r\n\tname: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<span>{{ data.quantity }} <app-unit [dataId]=\\\"data.unit\\\"></app-unit>&nbsp;<span *ngIf=\\\"ingredient\\\">{{ ingredient.name }}</span><span *ngIf=\\\"data.notes\\\">, {{ data.notes }}</span></span><br />\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { RecipeIngredient, Ingredient } from '../ingredient';\nimport { IngredientService } from '../ingredient.service';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.css']\n})\nexport class IngredientComponent implements OnInit {\n  @Input() data: RecipeIngredient;\n  ingredient: Ingredient;\n\n  constructor(private api: IngredientService) { }\n\n  ngOnInit() {\n    this.api.getIngredient(this.data.id).subscribe((i) => this.ingredient = i);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-12\\\">\\r\\n  <app-recipe *ngFor=\\\"let id of api.openRecipes\\\" [dataId]=\\\"id\\\"></app-recipe>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-collection',\n  templateUrl: './recipe-collection.component.html',\n  styleUrls: ['./recipe-collection.component.css']\n})\nexport class RecipeCollectionComponent implements OnInit {\n\n  constructor(public api: RecipeService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ng-template #recipeMakerContent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Creating New Recipe</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span>&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.title\\\" placeholder=\\\"Recipe Name\\\" ng-required=\\\"true\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.servings.min\\\" placeholder=\\\"Minimum Servings\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.servings.max\\\" placeholder=\\\"Maximum Servings\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group\\\">\\n            <!-- should have the month/year selector here -->\\n          </div>\\n        </div>\\n        <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"data.notes\\\" placeholder=\\\"Recipe Notes\\\"></textarea>\\n      </div>\\n\\n      <div class=\\\"col-md-8 form-horizontal\\\">\\n        <p><strong>Ingredients</strong></p>\\n        <div class=\\\"form-group\\\" *ngFor=\\\"let ingredient of data.ingredients\\\">\\n          <!--<ingredient-section ng-if=\\\"data.ingredientSectionIndex($index) >= 0\\\" model-index=\\\"data.ingredientSectionIndex($index)\\\"></ingredient-section>-->\\n          <div class=\\\"col-md-2\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ingredient.quantity\\\" step=\\\"any\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <select [(ngModel)]=\\\"ingredient.unit\\\" class=\\\"custom-select\\\">\\n              <option *ngFor=\\\"let unit of units\\\" value=\\\"{{ unit.id }}\\\">{{ unit.name }}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <app-ingredient-select [(ngModel)]=\\\"ingredient.id\\\"></app-ingredient-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ingredient.notes\\\">\\n          </div>\\n          <div class=\\\"col-md-1\\\">\\n            <button class=\\\"btn btn-light\\\" (click)=\\\"removeIngredient($index)\\\"><span>&times;</span></button>\\n          </div>\\n        </div>\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"addIngredient()\\\">Add Ingredient</button>\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"addIngredientSection()\\\">Add Section</button>\\n      </div>\\n    </div>\\n    <hr>\\n    <p><strong>Instructions</strong></p>\\n    <div class=\\\"form-horizontal\\\">\\n      <div *ngFor=\\\"let step of data.steps; index as i; trackBy: trackByFn\\\">\\n        <div class=\\\"col-md-1\\\">{{ i+1 }}.</div>\\n        <div class=\\\"col-md-11\\\">\\n          <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"data.steps[i]\\\" placeholder=\\\"Instructions\\\"></textarea>\\n        </div>\\n      </div>\\n    </div>\\n    <button class=\\\"btn btn-light\\\" (click)=\\\"addStep()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Add Cooking Step</button>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><span class=\\\"glyphicon glyphicon-save\\\"></span> Save Recipe</button>\\n  </div>\\n  {{ data | json }}\\n</ng-template>\\n\\n<button class=\\\"btn btn-lg btn-block btn-outline-primary\\\" (click)=\\\"open(recipeMakerContent)\\\">Make New Recipe</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Recipe } from '../recipe';\nimport { Unit } from '../unit';\nimport { UnitService } from '../unit.service';\n\n@Component({\n  selector: 'app-recipe-maker',\n  templateUrl: './recipe-maker.component.html',\n  styleUrls: ['./recipe-maker.component.css']\n})\nexport class RecipeMakerComponent implements OnInit {\n  data: Recipe;\n  units: Unit[];\n\n  constructor(private modalService: NgbModal, private unitsApi: UnitService) { }\n\n  ngOnInit() {\n     this.data = new Recipe();\n     this.unitsApi.getAll().subscribe((us) => this.units = us);\n  }\n\n  open(content) {\n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  addIngredient() {\n    this.data.ingredients.push({ id: '', quantity: 0, unit: '', notes: '' });\n  }\n\n  addStep() {\n    this.data.steps.push('');\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Recipe, RecipeSummary } from './recipe';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// eventually we'll use the indexed db crap here, but for now we'll just use the local data\nexport class RecipeService {\n  openRecipes: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  private loadRecipeDatabase(): Observable<Recipe[]> {\n    return this.http.get<Recipe[]>('./assets/recipes.json');\n  }\n\n  getRecipe(id: string): Observable<Recipe> {\n    return this.loadRecipeDatabase().pipe(map((data) => {\n      let outputData: Recipe[] = data.filter((r) => {\n        return r.id == id;\n      });\n\n      if ((outputData.length == 0) || (outputData.length > 1)) {\n        return null;\n      }\n\n      return outputData[0];\n    }));\n  }\n\n  getRecipeNames(): Observable<RecipeSummary[]> {\n    return this.loadRecipeDatabase().pipe(map((data) => {\n      return data.map((r) => {\n        return {\n          title: r.title,\n          id: r.id\n        };\n      });\n    }));\n  }\n\n  loadRecipe(id: string) {\n    this.loadRecipeDatabase().subscribe((data) => {\n      let selection: Recipe[] = data.filter((r) => r.id == id);\n\n      if (selection.length == 1) {\n        this.openRecipes.push(selection[0].id);\n      }\n    });\n  }\n\n  unloadRecipe(id: string) {\n    this.openRecipes = this.openRecipes.filter((r) => id != r);\n  }\n}\n","import { RecipeIngredient } from './ingredient';\r\n\r\nexport class Recipe {\r\n\tid: string = '';\r\n\ttitle: string = '';\r\n\tnotes: string = '';\r\n\tsteps: string[] = [];\r\n  servings: {\r\n    min: number;\r\n    max: number;\r\n  } = { min: 0, max: 0 };\r\n  source: {\r\n    name: string;\r\n    month: number;\r\n    year: number;\r\n  } = { name: '', month: 0, year: 0 };\r\n\tingredients: RecipeIngredient[] = [];\r\n\tingredientSections: {\r\n\t  index: number;\r\n\t  label: string;\r\n\t}[] = [];\r\n}\r\n\r\nexport class RecipeSummary {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\nexport class IngredientSection {\r\n  label: string;\r\n  ingredients: RecipeIngredient[];\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card mb-4\\\" *ngIf=\\\"recipe\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"card-title\\\"><h4>{{ recipe.title }}\\n        <button class=\\\"btn btn-danger float-right\\\" (click)=\\\"close()\\\"><span>&times;</span></button>\\n      </h4>\\n    </div>\\n    <div class=\\\"card-subtitle text-muted\\\">\\n      From {{ recipe.source.name }} ({{ recipe.source.year }}-{{ recipe.source.month }})<br />\\n      Serves <span *ngIf=\\\"recipe.servings.min != recipe.servings.max\\\">{{ recipe.servings.min }} to </span>{{ recipe.servings.max }}\\n    </div>\\n\\n    <br/>\\n\\n    <div class=\\\"row\\\" *ngFor=\\\"let section of sections\\\">\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"section.label\\\">\\n        <strong>{{ section.label }}</strong>\\n      </div>\\n      <div class=\\\"col-md-6\\\" *ngFor=\\\"let ingredient of section.ingredients\\\">\\n        <app-ingredient [data]=\\\"ingredient\\\"></app-ingredient>\\n      </div>\\n    </div>\\n\\n    <br/>\\n\\n    <ngb-tabset [justify]=\\\"'justified'\\\" type=\\\"pills\\\">\\n      <ngb-tab *ngIf=\\\"recipe.notes\\\" title=\\\"Notes\\\">\\n        <ng-template ngbTabContent>{{ recipe.notes }}</ng-template>\\n      </ngb-tab>\\n      <ngb-tab *ngFor=\\\"let step of recipe.steps; let i = index\\\" title=\\\"{{ i + 1 }}\\\">\\n        <ng-template ngbTabContent>\\n          <p>{{ step }}</p>\\n          <div *ngIf=\\\"timers[i].time != 0\\\">\\n            <button class=\\\"btn btn-light\\\" (click)=\\\"addTimer(timers[i])\\\">Add {{ timers[i].time }} second timer</button>\\n          </div>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe, IngredientSection } from '../recipe';\nimport { RecipeService } from '../recipe.service';\nimport { Timer } from '../timer';\nimport { TimerService } from '../timer.service';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.css']\n})\n\nexport class RecipeComponent implements OnInit {\n  @Input() dataId: string;\n  recipe: Recipe;\n  timers: Timer[];\n  stepTimer: number;\n  sections: IngredientSection[];\n\n  constructor(private api: RecipeService, private timer: TimerService) { }\n\n  ngOnInit() {\n    this.api.getRecipe(this.dataId).subscribe((recipe) => {\n      this.recipe = recipe;\n\n      this.sections = this.getIngredientSections();\n\n      this.timers = this.recipe.steps.map((stepText: string): Timer => {\n        var newTimer: Timer = { time: 0, description: '' };\n\n        var matches = /(?:\\.|,)(?: and )?\\s*([a-zA-Z\\s]+)(?:[0-9]+-|[0-9]+ to )?([0-9]+) (hour|minute|second)/.exec(stepText);\n        if (matches) {\n          newTimer.description = matches[1];\n          switch (matches[3]) {\n            case 'hour':\n              newTimer.time = parseInt(matches[2]) * 3600;\n              break;\n            case 'minute':\n              newTimer.time = parseInt(matches[2]) * 60;\n              break;\n            case 'second':\n              newTimer.time = parseInt(matches[2]);\n              break;\n          }\n        }\n        return newTimer;\n\n      });\n    });\n  }\n\n  private getIngredientSections(): IngredientSection[] {\n    if (!this.recipe.ingredientSections || (this.recipe.ingredientSections.length == 0)) {\n      return [{\n        label: null,\n        ingredients: this.recipe.ingredients\n      }];\n    }\n    else {\n      return this.recipe.ingredientSections.map((section, i) => {\n        var nextIndex: number = (this.recipe.ingredientSections.length-1 == i) ?\n          this.recipe.ingredients.length :\n          this.recipe.ingredientSections[i+1].index;\n\n        return {\n          label: section.label,\n          ingredients: this.recipe.ingredients.slice(section.index, nextIndex)\n        };\n      });\n    }\n  }\n\n  close() {\n    this.api.unloadRecipe(this.recipe.id);\n  }\n\n  addTimer(seconds: Timer) {\n    this.timer.add(seconds);\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-template #recipeSelectContent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Choose Recipes</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span>&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <button *ngFor=\\\"let recipe of recipes\\\" class=\\\"btn btn-light btn-block\\\" (click)=\\\"select(recipe.id)\\\">{{ recipe.title }}</button>\\n  </div>\\n</ng-template>\\n\\n<button class=\\\"btn btn-lg btn-block btn-outline-primary\\\" (click)=\\\"open(recipeSelectContent)\\\">Open Recipes</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { RecipeService } from '../recipe.service';\nimport { RecipeSummary } from '../recipe';\n\n@Component({\n  selector: 'app-select-recipe-modal',\n  templateUrl: './select-recipe-modal.component.html',\n  styleUrls: ['./select-recipe-modal.component.css']\n})\nexport class SelectRecipeModalComponent implements OnInit {\n  recipes: RecipeSummary[];\n\n  constructor(private api: RecipeService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.api.getRecipeNames().subscribe((data) => {\n      this.recipes = data.sort((a,b) => {\n        if (a.title < b.title) {\n          return -1;\n        }\n        else {\n          return 1;\n        }\n      })\n    });\n  }\n\n  open(content) {\n    this.modalService.open(content).result.then((something) => {\n\n    });\n  }\n\n  select(id: string) {\n    this.api.loadRecipe(id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngFor=\\\"let t of api.secondTimers\\\">\\r\\n  <app-timer [time]=\\\"t\\\"></app-timer>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../timer.service';\n\n@Component({\n  selector: 'app-timer-collection',\n  templateUrl: './timer-collection.component.html',\n  styleUrls: ['./timer-collection.component.css']\n})\nexport class TimerCollectionComponent implements OnInit {\n\n  constructor(public api: TimerService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Timer } from './timer';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TimerService {\n  secondTimers: Timer[] = [];\n\n  constructor() { }\n\n  add(t: Timer) {\n    this.secondTimers.push(t);\n  }\n}\n","export class Timer {\r\n  time: number;\r\n  description: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3>{{ time.description }} {{ time.time - timeElapsed | elapsedTime }}</h3>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { timer } from 'rxjs/index';\n\nimport { Timer } from '../timer';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  // both in seconds\n  @Input() time: Timer;\n  timeElapsed: number;\n  _timer: Subscription;\n\n  constructor() { }\n\n  ngOnInit() {\n    this._timer = timer(0, 1000).subscribe((t) => {\n      this.timeElapsed = t;\n      if (this.timeElapsed >= this.time.time) {\n        this._timer.unsubscribe();\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Unit } from './unit';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitService {\n\n  constructor(private http: HttpClient) { }\n\n  private loadUnitDatabase(): Observable<Unit[]> {\n    return this.http.get<Unit[]>('./assets/units.json');\n  }\n\n  getUnit(id: string): Observable<Unit> {\n    return this.loadUnitDatabase().pipe(\n      map((data) => {\n        let outputData: Unit[] = data.filter((r) => {\n          return r.id == id;\n        });\n\n        if (outputData.length == 1) {\n          return outputData[0];\n        }\n\n        return null;\n      })\n    );\n  }\n\n  getAll(): Observable<Unit[]> {\n    return this.loadUnitDatabase();\n  }\n}\n","module.exports = \"\"","module.exports = \"<span *ngIf=\\\"unit\\\">{{ unit.name }}</span>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Unit } from '../unit';\nimport { UnitService } from '../unit.service';\n\n@Component({\n  selector: 'app-unit',\n  templateUrl: './unit.component.html',\n  styleUrls: ['./unit.component.css']\n})\nexport class UnitComponent implements OnInit {\n  @Input() dataId: string;\n  unit: Unit;\n\n  constructor(private api: UnitService) { }\n\n  ngOnInit() {\n    this.api.getUnit(this.dataId).subscribe((u) => this.unit = u);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}